@using PagedList
@model IEnumerable<NetBlogger.Models.Post>

<table class="table table-bordered">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.PostId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CreateDate)
        </th>
        <th></th>
        <th></th>
        <th></th>
    </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.PostId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.HumanReadableDateTimeDiff("p", null, item.UpdateDate)
                @*Html.DisplayFor(modelItem => item.UpdateDate)*@
            </td>
            <td align="center">
                @Html.ActionLink("View", "Display", new { id = item.PostId }, new { @class = "btn btn-default" })
            </td>
            <td align="center">
                @Html.ActionLink("Edit", "Edit", new { id = item.PostId }, new { @class = "btn btn-default" })
            </td>

            <td align="center">
                @Html.ActionLink("Delete", "Delete", new { id = item.PostId }, new { @class = "btn btn-default" })
            </td>
        </tr>
    }

</table>
@*@Html.PagedListPager((StaticPagedList<NetBlogger.Models.Post>)ViewBag.PagedModel, page => Url.Action("Index", "Post", new { page = page }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing("tableContainer"))*@
@Html.PagedListPager((StaticPagedList<NetBlogger.Models.Post>)ViewBag.PagedModel, page => Url.Action("Index", "Post", new { page = page }))